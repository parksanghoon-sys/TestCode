<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:convert ="clr-namespace:wpfMVVM.Popup.Converters"
                    xmlns:control="clr-namespace:wpfMVVM.Popup.Controls">

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <convert:EnumToVisibilityConverter x:Key="EnumToVisibilityConverter"/>
    <!--Button Style-->
    <Style x:Key="NormalButtonStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type control:MessagePopUpBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type control:MessagePopUpBox}">
                    <Popup x:Name="msgPopup"
                           Visibility="{Binding Path=IsOpen, RelativeSource={RelativeSource TemplateParent}, Converter={StaticResource BooleanToVisibilityConverter}}"
                           Placement="Center"
                           PlacementTarget="{Binding RelativeSource={RelativeSource TemplateParent}}"
                           AllowsTransparency="True">
                        <Popup.Style>
                            <Style TargetType="Popup">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsOpen, RelativeSource={RelativeSource TemplateParent}}" Value="False">
                                        <Setter Property="IsOpen" Value="False"/>
                                    </DataTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Binding="{Binding Path=IsOpen, RelativeSource={RelativeSource TemplateParent}}" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="IsOpen" Value="True"/>
                                    </MultiTrigger>
                                </Style.Triggers>
                            </Style>
                        </Popup.Style>

                        <Grid x:Name="msgGrid"
                              Height="{Binding RelativeSource={RelativeSource TemplateParent}, Path=ActualHeight}"
                              Width="{Binding RelativeSource={RelativeSource TemplateParent}, Path=ActualWidth}"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Stretch">
                            <Grid Background="#FF000000"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Stretch"
                                  Opacity="0.5">
                                <Grid.Style>
                                    <Style TargetType="Grid">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsOpen, RelativeSource={RelativeSource TemplateParent}}" Value="False">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=IsOpen, RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                                                    <Condition Binding="{Binding Path=IsBackgroundDisable, RelativeSource={RelativeSource TemplatedParent}}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Visible" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                            </Grid>
                            <Border RenderTransformOrigin="0.5,0.5">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsOpen, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0"/>
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                                            </DoubleAnimationUsingKeyFrames>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0"/>
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                                            </DoubleAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.EnterActions>
                                                <DataTrigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="1" />
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0" />
                                                            </DoubleAnimationUsingKeyFrames>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="1" />
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0" />
                                                            </DoubleAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.ExitActions>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <Border.RenderTransform>
                                    <ScaleTransform x:Name="xborderScale" ScaleX="0" ScaleY="0"/>
                                </Border.RenderTransform>
                                <Border Background="#FFFFFFFF"
                                        CornerRadius="17"
                                        Padding="5"
                                        MinWidth="400"
                                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Image Grid.Row="0"
                                               
                                    </Grid>
                                </Border>
                            </Border>
                        </Grid>
                    </Popup>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>